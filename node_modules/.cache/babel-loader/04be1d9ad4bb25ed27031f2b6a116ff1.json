{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport default function useMenuControl() {\n  _s();\n\n  // State to record if the menu is open\n  const [isMenuOpen, setMenuOpen] = useState(false); // Click handler for opening and closing the menu\n\n  const clickHandler = () => setMenuOpen(!isMenuOpen);\n\n  useEffect(() => {\n    // Get original body overflow style so we can revert to it later on\n    const originalStyle = window.getComputedStyle(document.body).overflow; // If the menu is open then set the overflow to hidden to prevent scrolling the page further\n\n    if (isMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } // Re-enable scrolling when component unmounts by reverting to the original body overflow style value\n\n\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, [isMenuOpen]); // Returning 3 vales :\n  // 1. isMenuOpen: boolean - Is the menu open or not.\n  // 2. clickHandler: function - Function used to open and close the menu\n\n  return {\n    isMenuOpen,\n    clickHandler\n  };\n}\n\n_s(useMenuControl, \"7YyLwRgFtPuydq2whmLyn3rij3I=\");","map":{"version":3,"names":["useEffect","useState","useMenuControl","isMenuOpen","setMenuOpen","clickHandler","originalStyle","window","getComputedStyle","document","body","overflow","style"],"sources":["/Users/lukaszkaminski/Documents/GitHub/skan-lab/src/hooks/useMenuControl.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useMenuControl() {\n    // State to record if the menu is open\n    const [isMenuOpen, setMenuOpen] = useState(false);\n\n    // Click handler for opening and closing the menu\n    const clickHandler = () => setMenuOpen(!isMenuOpen);\n\n    useEffect(() => {\n        // Get original body overflow style so we can revert to it later on\n        const originalStyle = window.getComputedStyle(document.body).overflow;\n\n        // If the menu is open then set the overflow to hidden to prevent scrolling the page further\n        if (isMenuOpen) {\n            document.body.style.overflow = 'hidden';\n        }\n\n        // Re-enable scrolling when component unmounts by reverting to the original body overflow style value\n        return () => {\n            document.body.style.overflow = originalStyle;\n        };\n    }, [isMenuOpen]);\n\n    // Returning 3 vales :\n    // 1. isMenuOpen: boolean - Is the menu open or not.\n    // 2. clickHandler: function - Function used to open and close the menu\n    return { isMenuOpen, clickHandler };\n}"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACrC;EACA,MAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BH,QAAQ,CAAC,KAAD,CAA1C,CAFqC,CAIrC;;EACA,MAAMI,YAAY,GAAG,MAAMD,WAAW,CAAC,CAACD,UAAF,CAAtC;;EAEAH,SAAS,CAAC,MAAM;IACZ;IACA,MAAMM,aAAa,GAAGC,MAAM,CAACC,gBAAP,CAAwBC,QAAQ,CAACC,IAAjC,EAAuCC,QAA7D,CAFY,CAIZ;;IACA,IAAIR,UAAJ,EAAgB;MACZM,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBD,QAApB,GAA+B,QAA/B;IACH,CAPW,CASZ;;;IACA,OAAO,MAAM;MACTF,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBD,QAApB,GAA+BL,aAA/B;IACH,CAFD;EAGH,CAbQ,EAaN,CAACH,UAAD,CAbM,CAAT,CAPqC,CAsBrC;EACA;EACA;;EACA,OAAO;IAAEA,UAAF;IAAcE;EAAd,CAAP;AACH;;GA1BuBH,c"},"metadata":{},"sourceType":"module"}